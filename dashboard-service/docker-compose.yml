version: '3.8'

services:
  dashboard-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dashboard-service
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      # Server
      NODE_ENV: production
      PORT: 8086

      # Database (priority: DATABASE_URL > individual vars)
      DATABASE_URL: ${DATABASE_URL:-}
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-Admisión_MTN_DB}
      DB_USERNAME: ${DB_USERNAME:-admin}
      DB_PASSWORD: ${DB_PASSWORD:-admin123}
      DB_POOL_MAX: ${DB_POOL_MAX:-20}
      DB_POOL_IDLE_TIMEOUT: ${DB_POOL_IDLE_TIMEOUT:-30000}
      DB_POOL_CONNECTION_TIMEOUT: ${DB_POOL_CONNECTION_TIMEOUT:-2000}
      DB_QUERY_TIMEOUT: ${DB_QUERY_TIMEOUT:-5000}

      # JWT
      JWT_SECRET: ${JWT_SECRET:-your_secure_jwt_secret_here}

      # Circuit Breaker
      CIRCUIT_BREAKER_TIMEOUT: ${CIRCUIT_BREAKER_TIMEOUT:-5000}
      CIRCUIT_BREAKER_ERROR_THRESHOLD: ${CIRCUIT_BREAKER_ERROR_THRESHOLD:-50}
      CIRCUIT_BREAKER_RESET_TIMEOUT: ${CIRCUIT_BREAKER_RESET_TIMEOUT:-30000}

      # Cache
      CACHE_ENABLED: ${CACHE_ENABLED:-true}
      CACHE_TTL_STATS: ${CACHE_TTL_STATS:-300000}
      CACHE_TTL_ANALYTICS: ${CACHE_TTL_ANALYTICS:-600000}

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_MAX_SIZE: ${LOG_MAX_SIZE:-20m}
      LOG_MAX_FILES: ${LOG_MAX_FILES:-14d}

      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}

    volumes:
      - ./logs:/app/logs
    networks:
      - mtn-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8086/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: mtn-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin123}
      POSTGRES_DB: ${DB_NAME:-Admisión_MTN_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mtn-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-admin}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  mtn-network:
    driver: bridge

volumes:
  postgres-data:
